{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
        "AdAdminUserName": {
            "defaultValue": "ADAdministrator",
            "metadata": {
                "description": "The name of the Administrator account of the Domain and VMs"
            },
            "type": "string"
        },
        "AdAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the Administrator account of the Domain and VMs"

            }
        },
        "assetLocation": {
            "defaultValue": "https://raw.githubusercontent.com/rcarboneras/Psdemotraining/master/active-directory-new-domain-with-data/",
            "metadata": {
                "description": "The location of resources such as templates and DSC modules that the script is dependent"
            },
            "type": "string"
        },
        "DCNicIPAddress": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the new AD VM"
            },
            "defaultValue": "10.0.1.200"
        },
        "DCNicName": {
            "type": "string",
            "metadata": {
                "description": "The name of the NIC attached to the new VM"
            },
            "defaultValue": "DCNic"
        },
        "DCpublicIPAddressName": {
            "defaultValue": "DCpublicIP",
            "metadata": {
                "description": "The name of the public IP address used by the DC"
            },
            "type": "string"
        },
        "DCVMName": {
            "type": "string",
            "metadata": {
                "description": "The name of the 2012 DC Server VM"
            },
            "defaultValue": "2012R2-DC"
        },
        "domainName": {
            "type": "string",
            "metadata": {
                "description": "The FQDN of the AD Domain created ",
                "defaultValue": "contoso.com"
            }
        },
        "location": {
            "type": "string",
            "allowedValues": [
                "West US",
                "East US",
                "West Europe",
                "East Asia",
                "Southeast Asia"
            ],
            "metadata": {
                "description": "The region to deploy the resources into"
            },
            "defaultValue": "West Europe"
        },
        "MSNicIPAddress": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the MS VM"
            },
            "defaultValue": "10.0.1.210"
        },
        "MSNicName": {
            "type": "string",
            "metadata": {
                "description": "The name of the NIC attached to the MS VM"
            },
            "defaultValue": "MSNic"
        },
        "MSpublicIPAddressName": {
            "defaultValue": "MSpublicIP",
            "metadata": {
                "description": "The name of the public IP address used by the MS"
            },
            "type": "string"
        },
        "MSVMName": {
            "type": "string",
            "metadata": {
                "description": "The name of the 2012 MS Server VM"
            },
            "defaultValue": "2012R2-MS"
        },
        "networkSecurityGroupName": {
            "type": "string",
            "metadata": {
                "description": "The Name of the default networkSecurityGroup"
            },
            "defaultValue": "PSDemoRDP-nsg"
        },
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of the new storage account created to store the VMs disks"
            }
        },
        "PSDemoSubnet": {
            "type": "string",
            "metadata": {
                "description": "The address range of the subnet created in the new VNET"
            },
            "defaultValue": "10.0.1.0/24"
        },
        "PSDemoSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the subnet created in the new VNET"
            },
            "defaultValue": "PSDemoSubnet"
        },
        "publicIPAddressType": {
            "type": "string",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "metadata": {
                "description": "The type of the public IP address used by the Load Balancer"
            },
            "defaultValue": "Dynamic"
        },
        "RDPPort": {
            "type": "int",
            "metadata": {
                "description": "The public RDP port for the VM"
            },
            "defaultValue": 3389
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The type of the Storage Account created"
            },
            "defaultValue": "Standard_LRS"
        },
        "virtualNetworkAddressRange": {
            "type": "string",
            "metadata": {
                "description": "The address range of the new VNET in CIDR format"
            },
            "defaultValue": "10.0.0.0/16"
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Virtual Network to Create"
            },
            "defaultValue": "PSDemoVNET"
        },
        "VMSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D1",
                "Standard_DS1",
                "Standard_D2",
                "Standard_DS2",
                "Standard_D3",
                "Standard_DS3",
                "Standard_D4",
                "Standard_DS4",
                "Standard_D11",
                "Standard_DS11",
                "Standard_D12",
                "Standard_DS12",
                "Standard_D13",
                "Standard_DS13",
                "Standard_D14",
                "Standard_DS14"
            ],
            "metadata": {
                "description": "The size of the VMs Created"
            },
            "defaultValue": "Standard_D1"
        },
        "W8NicIPAddress": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the W8 VM"
            },
            "defaultValue": "10.0.1.220"
        },
        "W8NicName": {
            "type": "string",
            "metadata": {
                "description": "The name of the NIC attached to the W8 VM"
            },
            "defaultValue": "W8Nic"
        },
        "W8publicIPAddressName": {
            "defaultValue": "W8publicIP",
            "metadata": {
                "description": "The name of the public IP address used by the W8"
            },
            "type": "string"
        },
        "W8VMName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Windows 8 VM"
            },
            "defaultValue": "WIN8-WS"
        }
    },
    "variables": {
        "adConfigurationFunction": "CreateADDomainWithData.ps1\\CreateADDomainWithData",
        "adDataDisk": "[concat(parameters('DCVMName'),'DataDisk')]",
        "adDataDiskSize": 5,
        "AddtoADConfiguration": "AddComputerADDomain.ps1\\ADtotheDomain",
        "adModulesURL": "[concat(parameters('assetLocation'),'CreateADDomainWithData.ps1.zip')]",
        "DCNicId": "[resourceId('Microsoft.Network/networkInterfaces',parameters('DCNicName'))]",
        "MSConfigurationFunction": "CreateADDomainWithData.ps1\\CreateADDomainWithData",
        "MSModulesURL": "[concat(parameters('assetLocation'),'AddComputerADDomain.ps1.zip')]",
        "PSDemoSubnetRef": "[concat(variables('VnetID'),'/subnets/',parameters('PSDemoSubnetName'))]",
        "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "vnetTemplateUri": "[concat(parameters('assetLocation'),'vnet.json')]",
        "vnetwithDNSTemplateUri": "[concat(parameters('assetLocation'),'vnet-with-dns-server.json')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "name": "[parameters('newStorageAccountName')]",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }
        },
        {
            "name": "[parameters('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "3389",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2015-05-01-preview",
            "name": "[parameters('DCpublicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAddressType')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2015-05-01-preview",
            "name": "[parameters('MSpublicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAddressType')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2015-05-01-preview",
            "name": "[parameters('W8publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAddressType')]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "VNet",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[parameters('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[parameters('PSDemoSubnetName')]"
                    },
                    "subnetRange": {
                        "value": "[parameters('PSDemoSubnet')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('vnetTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[parameters('DCNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('DCNicIPAddress')]",
                            "subnet": {
                                "id": "[variables('PSDemoSubnetRef')]"

                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('DCpublicIPAddressName'))]"

                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                }
            },
            "dependsOn": [
                "Microsoft.Resources/deployments/VNet",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
            ]
        },
        {
            "name": "[parameters('MSNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('MSNicIPAddress')]",
                            "subnet": {
                                "id": "[variables('PSDemoSubnetRef')]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('MSpublicIPAddressName'))]"

                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                }
            },
            "dependsOn": [
                "Microsoft.Resources/deployments/VNet",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
            ]
        },
        {
            "name": "[parameters('W8NicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig3",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('W8NicIPAddress')]",
                            "subnet": {
                                "id": "[variables('PSDemoSubnetRef')]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('W8publicIPAddressName'))]"

                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                }
            },
            "dependsOn": [
                "Microsoft.Resources/deployments/VNet",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('DCVMName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VMSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('DCVMName')]",
                    "adminUserName": "[parameters('AdAdminUserName')]",
                    "adminPassword": "[parameters('AdAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('DCVMName'),'osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "vhd": {
                                "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/', variables('adDataDisk'),'-1.vhd')]"
                            },
                            "name": "[concat(parameters('DCVMName'),'-data-disk1')]",
                            "caching": "None",
                            "createOption": "empty",
                            "diskSizeGB": "[variables('adDataDiskSize')]",
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('DCNicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces',parameters('DCNicName'))]"
            ],
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('DCVMName'),'/CreateADForest')]",
                    "apiVersion": "2015-05-01-preview",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('DCVMName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.11",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "modulesUrl": "[variables('adModulesURL')]",
                            "configurationFunction": "[variables('adConfigurationFunction')]",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('AdAdminUserName')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('AdAdminPassword')]"
                            },
                            "DataBlobUri": "[concat(parameters('assetLocation'),'CreateADDomainWithData.psd1')]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "name": "[parameters('MSVMName')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VMSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('MSVMName')]",
                    "adminUserName": "[parameters('AdAdminUserName')]",
                    "adminPassword": "[parameters('AdAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('MSVMName'),'osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('MSNicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces',parameters('MSNicName'))]"
            ],
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('MSVMName'),'/ADVMtoDomain')]",
                    "apiVersion": "2015-05-01-preview",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('MSVMName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('DCVMName'))]",
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('DCVMName'),'/extensions/CreateADForest')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.11",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "modulesUrl": "[variables('MSModulesURL')]",
                            "configurationFunction": "[variables('AddtoADConfiguration')]",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('AdAdminUserName')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('AdAdminPassword')]"
                            },
                            "DataBlobUri": "[concat(parameters('assetLocation'),'AddComputerADDomain.psd1')]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[parameters('W8VMName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VMSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('W8VMName')]",
                    "adminUserName": "[parameters('AdAdminUserName')]",
                    "adminPassword": "[parameters('AdAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftVisualStudio",
                        "offer": "Windows",
                        "sku": "Win81-Ent-N-x64",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('W8VMName'),'osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('W8NicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces',parameters('W8NicName'))]"
            ],
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('W8VMName'),'/ADVMtoDomain')]",
                    "apiVersion": "2015-05-01-preview",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('W8VMName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('DCVMName'))]",
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('DCVMName'),'/extensions/CreateADForest')]",
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('W8VMName'),'/extensions/DisableEP')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.11",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "modulesUrl": "[variables('MSModulesURL')]",
                            "configurationFunction": "[variables('AddtoADConfiguration')]",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('AdAdminUserName')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('AdAdminPassword')]"
                            },
                            "DataBlobUri": "[concat(parameters('assetLocation'),'AddComputerADDomain.psd1')]"
                        }
                    }
                },
                {
                    "apiVersion": "2015-06-15",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('W8VMName'),'/DisableEP')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('W8VMName'))]"
                    ],
                    "tags": {
                        "displayName": "Disable-Execution-Policy"
                    },
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "https://raw.githubusercontent.com/rcarboneras/PSDemotraining/master/active-directory-new-domain-with-data/DisableExecutionPolicy.ps1"
                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File DisableExecutionPolicy.ps1"
                        }
                    }
                }
            ]
        },
        {
            "name": "UpdateVNetDNS",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('DCVMName'),'/extensions/CreateADForest')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetwithDNSTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[parameters('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[parameters('PSDemoSubnetName')]"
                    },
                    "subnetRange": {
                        "value": "[parameters('PSDemoSubnet')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[parameters('DCNicIPAddress')]"
                        ]
                    }
                }
            }
        }
    ]
}
